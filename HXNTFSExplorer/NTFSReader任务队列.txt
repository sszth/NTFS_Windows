工作日报：



1.多平台验证
会同时存在90和A0里面都有信息情况，解析A0时需解析90
2.界面美化

1.卡顿,目前还有点问题  2.排序  3.之前直接替换Item内容，可能出现显示比源多  显示子项与源不匹配 4.关闭有问题
3.PPT和文档

bug库：
1.未点击直接翻页 崩溃


1.改为双线程
2.翻页优化  添加上下左右快捷键
3.拷贝进度条
遇到拷贝后文件大小不一致，对比2G以上的.iso文件和.txt文件，iso文件拷贝后大于源文件，.txt拷贝后与源文件一致。
在2G以下与源文件大小一致。2G大小的iso不存在压缩标识为加密、压缩、稀疏。目前暂未找到原因。
4.界面美化，触屏风格和客户端风格
5.多平台验证
6.PPT和文档




1.解决偶现index时间问题
原因：根据index获取的更新数组大小包含更新序列，需要在此基础上减去更新序列
2.解决多线程问题.目前实现方式是一个线程拷贝一个文件，使用QThreadPool,QThreadPool当前运行线程是以CPU核心个数*2，
而缓冲区buffer只有4个。如果CPU有6核，同时拷贝12个物理文件，会出现正在运行线程获取不到buffer情况。
给出解决方案：
	1.buffer数量变多，单个buffer大小变小。能保证缓存占用大小不变，但是i/o操作次数增加，读取变慢，目前是读取索引速度还可以接受；
	2.只有1个线程负责拷贝。相比于1方案,程序变得易维护，并且更加稳定，但是效率会慢很多。分析windows文件管理，应该是采取方案1。
目前采取方案1
不支持单核，文件监控线程占用一个

3.名称规则
_HX_i
4.文件夹拷贝处理
如果为文件夹跳过







8.缓存压缩
9.多平台验证
9.缓存置换



1.优先解决界面卡顿问题
	
2.解决多线程问题




QFileSystemWatcher在windows下实际调用qfilesystemwatcher_win.cpp进行监听，使用WinAPI FindNextChangeNotification。
当变化时遍历缓存的文件信息列表与实际存储对比，判断文件参数、文件变更、文件移动，并将变化的文件通过信号发射出来.
FindNextChangeNotification无法像ReadDirectoryChangesW获取具体哪一个文件，也不能获取到具体变更细节。
例如创建文件刚开始数据还在缓存中FindNextChangeNotification会立即通知，ReadDirectoryChangesW可以获取具体是哪一个。


*							windows文件系统在拷贝时会隔断时间刷新正在拷贝的文件大小。
*							目前猜测可能通过以下几种方式实现
*							1.通过USN；
*							2.每隔一段时间检测80属性,必须在产生索引后；



今天将文件监控
后台任务队列完成



将简单拷贝粘贴完成,还需处理下缓存问题，目前缓冲未正确刷新与索引更新序列处理部分簇异常;
拷贝时多出0000,最后一个lcn有空余
拷贝后界面未刷新.设置缓存无效,重新读取索引信息，同时会出现一种情况，可能索引读取完毕后文件写入完成。
考虑实现文件监控，使用QFileSystemWatcher进行监控会遇到2个问题：
1.文件正在写入，索引中长度为0;
2.文件在缓存，还未写入。索引中无对应信息
如果有空余时间实用USN实现文件监控




拷贝流程新建一个单的buffer与缓存区中单个buffer一致，获取时替换buffer并写入。
是否进行空闲预缓存;
将线程池、任务队列完成(完成端口实现);





1.界面优化  核心需求  好看、简单实用、不卡顿

2.




测试用例：
1.拷贝文件
同级目录拷贝；
不同目录下拷贝
2.拷贝目录
同级目录拷贝；
不同目录下拷贝

3.进度窗口
点击取消后重新拷贝
点击关闭后重新拷贝

